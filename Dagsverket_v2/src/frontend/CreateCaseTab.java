/*
  _______ ______          __  __   _______ ____  ____  ____  
 |__   __|  ____|   /\   |  \/  | |__   __/ __ \|  _ \|  _ \ 
    | |  | |__     /  \  | \  / |    | | | |  | | |_) | |_) |
    | |  |  __|   / /\ \ | |\/| |    | | | |  | |  _ <|  _ < 
    | |  | |____ / ____ \| |  | |    | | | |__| | |_) | |_) |
    |_|  |______/_/    \_\_|  |_|    |_|  \____/|____/|____/                                                            
*/
package frontend;
import backend.*;
import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import static javax.swing.JOptionPane.showMessageDialog;

public class CreateCaseTab extends javax.swing.JPanel {
    private Cases cases;
    private Users users;
    private String currentDate;
    public static DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    public static Calendar today = Calendar.getInstance();
    private GUI gui; 

    /**
     * Creates new form CreateCaseTab
     */
    public CreateCaseTab(GUI gui) {
        this.cases = new Cases();
        this.users = new Users();
        this.currentDate = dateFormat.format(today.getTime());
        this.gui = gui; 
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCreateCaseName = new javax.swing.JLabel();
        labelCreateCaseDNameHeader = new javax.swing.JLabel();
        labelCreateCaseHeader = new javax.swing.JLabel();
        comboBoxCreateCaseSupervisor = new javax.swing.JComboBox();
        labelCreateCaseDSupervisorHeader = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        labelDDate = new javax.swing.JLabel();
        labelCustomerDFirstName = new javax.swing.JLabel();
        textFieldCustomerFirstName = new javax.swing.JTextField();
        labelDAddress = new javax.swing.JLabel();
        textFieldAddress = new javax.swing.JTextField();
        textFieldPostPlace = new javax.swing.JTextField();
        textFieldPostalCode = new javax.swing.JTextField();
        labelDPostalCode = new javax.swing.JLabel();
        textFieldPhone = new javax.swing.JTextField();
        labelDPhone = new javax.swing.JLabel();
        labelDSubject = new javax.swing.JLabel();
        textFieldSubject = new javax.swing.JTextField();
        labelDReqDate = new javax.swing.JLabel();
        labelCreateCaseDReqTime = new javax.swing.JLabel();
        ComboBoxCreateCaseReqTime = new javax.swing.JComboBox();
        labelCreateCaseReqDate = new javax.swing.JLabel();
        labelDDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescription = new javax.swing.JTextArea();
        labelDPrice = new javax.swing.JLabel();
        textFieldPrice = new javax.swing.JTextField();
        labelCreateCaseDInspectDate = new javax.swing.JLabel();
        labelDStartDate = new javax.swing.JLabel();
        labelDEquipment = new javax.swing.JLabel();
        labelDContacts = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        textAreaContacts = new javax.swing.JTextArea();
        labelDStatus = new javax.swing.JLabel();
        comboBoxStatus = new javax.swing.JComboBox();
        buttonComplete = new javax.swing.JButton();
        dateFieldInspectDate = new com.toedter.calendar.JDateChooser();
        dateFieldReqDate = new com.toedter.calendar.JDateChooser();
        dateFieldStartDate = new com.toedter.calendar.JDateChooser();
        textFieldCustomerLastName = new javax.swing.JTextField();
        labelCustomerDLastName = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        textAreaToolList = new javax.swing.JTextArea();

        labelCreateCaseName.setText(users.currentUser.toString());

        labelCreateCaseDNameHeader.setText("Mottatt av");

        labelCreateCaseHeader.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelCreateCaseHeader.setText("Oppdragsregistrering");

        comboBoxCreateCaseSupervisor.setModel(new javax.swing.DefaultComboBoxModel(this.users.getUsers()));
        comboBoxCreateCaseSupervisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCreateCaseSupervisorActionPerformed(evt);
            }
        });

        labelCreateCaseDSupervisorHeader.setText("Ansvarlig");

        labelDate.setText(this.currentDate
        );

        labelDDate.setText("Dato");

        labelCustomerDFirstName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCustomerDFirstName.setText("Fornavn");

        /* limit for hvor mange characters som kan skrives inn */
        textFieldCustomerFirstName.setDocument(new JTextFieldLimit(29)); // endre tallet for å endre limit
        textFieldCustomerFirstName.setToolTipText("");
        textFieldCustomerFirstName.setVerifyInputWhenFocusTarget(false);
        textFieldCustomerFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCustomerFirstNameActionPerformed(evt);
            }
        });

        labelDAddress.setText("Adresse");

        /* limit for hvor mange characters som kan skrives inn */
        textFieldAddress.setDocument(new JTextFieldLimit(30)); // endre tallet for å endre limit
        textFieldAddress.setToolTipText("...");
        textFieldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAddressActionPerformed(evt);
            }
        });

        textFieldPostPlace.setToolTipText("...");
        textFieldPostPlace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPostPlaceActionPerformed(evt);
            }
        });

        /* limit for hvor mange characters som kan skrives inn */
        textFieldPostalCode.setDocument(new JTextFieldLimit(4)); // endre tallet for å endre limit
        textFieldPostalCode.setToolTipText("...");
        textFieldPostalCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPostalCodeActionPerformed(evt);
            }
        });
        textFieldPostalCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldPostalCodeFocusLost(evt);
            }
        });
        textFieldPostalCode.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                textFieldPostalCodeInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        textFieldPostalCode.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                textFieldPostalCodePropertyChange(evt);
            }
        });

        labelDPostalCode.setText("Postnr");

        /* limit for hvor mange characters som kan skrives inn */
        textFieldPhone.setDocument(new JTextFieldLimit(8)); // endre tallet for å endre limit
        textFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPhoneActionPerformed(evt);
            }
        });

        labelDPhone.setText("Telefon");

        labelDSubject.setText("Arbeidets art");

        /* limit for hvor mange characters som kan skrives inn */
        textFieldSubject.setDocument(new JTextFieldLimit(29)); // endre tallet for å endre limit
        textFieldSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSubjectActionPerformed(evt);
            }
        });

        labelDReqDate.setText("Ønsket oppstart");

        labelCreateCaseDReqTime.setText("Kl");

        String[] tider = new String[48];
        int teller = 0;
        String time = "";
        String minutt = "";
        for(int i = 0; i<24; i++){
            for(int j = 0; j<31; j+=30){
                time = String.valueOf(i);
                if(i<10){
                    time ="0"+time;
                }
                minutt = String.valueOf(j);
                if(j==0){
                    minutt += "0";
                }
                tider[teller] = time + ":" + minutt;
                teller++;
            }

        }
        ComboBoxCreateCaseReqTime.setModel(new javax.swing.DefaultComboBoxModel(tider));
        ComboBoxCreateCaseReqTime.setSelectedIndex(16);
        ComboBoxCreateCaseReqTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxCreateCaseReqTimeActionPerformed(evt);
            }
        });

        labelDDescription.setText("Beskrivelse / Annet");

        textAreaDescription.setDocument(new JTextFieldLimit(199)); // endre tallet for å endre limit
        textAreaDescription.setColumns(20);
        textAreaDescription.setRows(5);
        jScrollPane1.setViewportView(textAreaDescription);

        labelDPrice.setText("Pris");

        /* limit for hvor mange characters som kan skrives inn */
        textFieldPrice.setDocument(new JTextFieldLimit(7)); // endre tallet for å endre limit
        textFieldPrice.setText("1750");
        textFieldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPriceActionPerformed(evt);
            }
        });

        labelCreateCaseDInspectDate.setText("Befaring");

        labelDStartDate.setText("Avtalt oppstart");

        labelDEquipment.setText("Utstyrsliste");

        labelDContacts.setText("Kontaktpersoner");

        textAreaContacts.setDocument(new JTextFieldLimit(199)); // endre tallet for å endre limit
        textAreaContacts.setColumns(20);
        textAreaContacts.setRows(5);
        jScrollPane7.setViewportView(textAreaContacts);

        labelDStatus.setText("Status");

        comboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Uferdig", "Aktiv"}));

        buttonComplete.setBackground(new java.awt.Color(51, 51, 51));
        buttonComplete.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        buttonComplete.setForeground(new java.awt.Color(204, 204, 204));
        buttonComplete.setText("Ferdig");
        buttonComplete.setToolTipText("");
        buttonComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCompleteActionPerformed(evt);
            }
        });

        /* limit for hvor mange characters som kan skrives inn */
        textFieldCustomerLastName.setDocument(new JTextFieldLimit(29)); // endre tallet for å endre limit
        textFieldCustomerLastName.setToolTipText("");
        textFieldCustomerLastName.setVerifyInputWhenFocusTarget(false);
        textFieldCustomerLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCustomerLastNameActionPerformed(evt);
            }
        });

        labelCustomerDLastName.setText("Etternavn");

        textAreaToolList.setDocument(new JTextFieldLimit(199));
        textAreaToolList.setColumns(20);
        textAreaToolList.setRows(5);
        jScrollPane8.setViewportView(textAreaToolList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(labelCreateCaseHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(labelDSubject))
                            .addComponent(labelDReqDate))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(labelCreateCaseReqDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelCreateCaseDReqTime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ComboBoxCreateCaseReqTime, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(textFieldSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(labelDPhone)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelCustomerDFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textFieldCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(33, 33, 33)
                                                .addComponent(labelCustomerDLastName)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textFieldCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelDPostalCode)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textFieldPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textFieldPostPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelDAddress)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelDEquipment)
                                    .addComponent(labelDStartDate)
                                    .addComponent(labelDContacts)
                                    .addComponent(labelCreateCaseDInspectDate)
                                    .addComponent(labelDPrice)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCreateCaseDNameHeader)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(labelDDate)))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCreateCaseName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelDate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelCreateCaseDSupervisorHeader))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(labelDDescription)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateFieldReqDate, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(labelDStatus)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dateFieldInspectDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dateFieldStartDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFieldPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboBoxCreateCaseSupervisor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(buttonComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(219, 219, 219))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(labelCreateCaseHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelCreateCaseDNameHeader)
                                .addGap(4, 4, 4)
                                .addComponent(labelDDate))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelCreateCaseName)
                                .addGap(4, 4, 4)
                                .addComponent(labelDate))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxCreateCaseSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCreateCaseDSupervisorHeader))))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCustomerDFirstName)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelCustomerDLastName))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelDPrice)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelDAddress)
                        .addComponent(labelCreateCaseDInspectDate))
                    .addComponent(dateFieldInspectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldPostPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDPostalCode))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelDPhone)
                        .addComponent(labelDStartDate))
                    .addComponent(dateFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDEquipment)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelDSubject)
                            .addComponent(textFieldSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addComponent(labelDReqDate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelCreateCaseDReqTime)
                                    .addComponent(ComboBoxCreateCaseReqTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addComponent(labelCreateCaseReqDate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateFieldReqDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDContacts)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelDStatus)
                                .addComponent(comboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addComponent(buttonComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDDescription)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(77, 77, 77))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxCreateCaseSupervisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCreateCaseSupervisorActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCreateCaseSupervisorActionPerformed

    private void textFieldCustomerFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCustomerFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldCustomerFirstNameActionPerformed

    private void textFieldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAddressActionPerformed

    private void textFieldPostPlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPostPlaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPostPlaceActionPerformed

    private void textFieldPostalCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPostalCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPostalCodeActionPerformed

    private void textFieldPostalCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldPostalCodeFocusLost
        String newAddress = this.cases.getPostAddressFromDb(textFieldPostalCode.getText());
        textFieldPostPlace.setText(newAddress);
    }//GEN-LAST:event_textFieldPostalCodeFocusLost

    private void textFieldPostalCodeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textFieldPostalCodeInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPostalCodeInputMethodTextChanged

    private void textFieldPostalCodePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_textFieldPostalCodePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPostalCodePropertyChange

    private void textFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPhoneActionPerformed

    private void textFieldSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldSubjectActionPerformed

    private void calCreateCaseReqDateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_calCreateCaseReqDateStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_calCreateCaseReqDateStateChanged

    private void calCreateCaseReqDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calCreateCaseReqDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calCreateCaseReqDateActionPerformed

    private void calCreateCaseReqDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calCreateCaseReqDatePropertyChange
        if (evt.getNewValue() instanceof Date){
            Date dato = (Date)evt.getNewValue();
            // System.out.println(dato.toString());
            SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("dd/MM/yyyy");
            String date = DATE_FORMAT.format(dato);
            labelCreateCaseReqDate.setText(date);
        }
    }//GEN-LAST:event_calCreateCaseReqDatePropertyChange

    private void ComboBoxCreateCaseReqTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxCreateCaseReqTimeActionPerformed
        // System.out.println(ComboBoxCreateCaseReqTime.getSelectedItem());        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxCreateCaseReqTimeActionPerformed

    private void textFieldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPriceActionPerformed

    private void calCreateCaseInspectDateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_calCreateCaseInspectDateStateChanged

    }//GEN-LAST:event_calCreateCaseInspectDateStateChanged

    private void calCreateCaseInspectDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calCreateCaseInspectDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calCreateCaseInspectDateActionPerformed
/*
    private void calCreateCaseInspectDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calCreateCaseInspectDatePropertyChange
        if (evt.getNewValue() instanceof Date){
            Date dato = (Date)evt.getNewValue();
            System.out.println(dato.toString());
            SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("dd/MM/yyyy");
            String date = DATE_FORMAT.format(dato);
            labelCreateCaseInspectDate.setText(date);
        }
    }//GEN-LAST:event_calCreateCaseInspectDatePropertyChange
*/
    private void calCreateCaseStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calCreateCaseStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calCreateCaseStartDateActionPerformed
/*
    private void calCreateCaseStartDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calCreateCaseStartDatePropertyChange
        if (evt.getNewValue() instanceof Date){
            Date dato = (Date)evt.getNewValue();
            SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("dd/MM/yyyy");
            String date = DATE_FORMAT.format(dato);
            labelCreateCaseStartDate.setText(date);
        }
    }//GEN-LAST:event_calCreateCaseStartDatePropertyChange
*/
    private void buttonCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCompleteActionPerformed
        Date reqDate = dateFieldReqDate.getDate();
        Date inspectDate = dateFieldInspectDate.getDate();
        Date startDate = dateFieldStartDate.getDate();
        
        String reqDateString = String.format("%1$td-%1$tm-%1$tY", reqDate);
        String inspectDateString = String.format("%1$td-%1$tm-%1$tY", inspectDate);
        String startDateString = String.format("%1$td-%1$tm-%1$tY", startDate);
        
        ArrayList<Integer> errors = this.cases.createCase(
        users.currentUser.getId(),
        currentDate,
        textFieldCustomerFirstName.getText().trim(),
        textFieldCustomerLastName.getText().trim(),
        textFieldAddress.getText().trim(),
        textFieldPostalCode.getText().trim(),
        textFieldPostPlace.getText().trim(),
        textFieldPhone.getText().trim(),
        textFieldSubject.getText().trim(),
        reqDateString,
        ComboBoxCreateCaseReqTime.getSelectedItem().toString(),
        textAreaDescription.getText().trim(),
        this.users.getUserIdByFullName(comboBoxCreateCaseSupervisor.getSelectedItem().toString()),
        textFieldPrice.getText().trim(),
        inspectDateString,
        startDateString,
        textAreaToolList.getText().trim(),
        textAreaContacts.getText().trim(),
        comboBoxStatus.getSelectedItem().toString()
        );
        
        labelCustomerDFirstName.setForeground(Color.black);
        labelCustomerDLastName.setForeground(Color.black);                            
       // labelCustomerDFirstName.setForeground(Color.red);            
        labelDSubject.setForeground(Color.black);            
        labelDPhone.setForeground(Color.black);           
        labelDPostalCode.setForeground(Color.black);            
        labelDPrice.setForeground(Color.black);   
        setErrors(errors);
        if(errors.isEmpty()){
            showMessageDialog(null, "Oppdrag registrert");     
            this.gui.getCardLayout().show(this.gui.getPanelContent(), comboBoxStatus.getSelectedItem().toString());
            if(comboBoxStatus.getSelectedItem().toString().equals("Aktiv")){
                this.gui.getViewActiveTab().updateList();
                this.gui.setAllDarkGray();
                this.gui.getButtonViewActiveCases().setBackground(Color.black);
            }
            else if(comboBoxStatus.getSelectedItem().toString().equals("Uferdig")){
                this.gui.getViewDraftTab().updateList();      
                this.gui.setAllDarkGray();                
                this.gui.getButtonViewDraftCases().setBackground(Color.black);                
            }
            this.resetFields();            
        }
    }
    
    public void resetFields(){
        textFieldCustomerFirstName.setText("");
        textFieldCustomerLastName.setText("");
        textFieldAddress.setText("");
        textFieldPostalCode.setText("");
        textFieldPostPlace.setText("");
        textFieldPhone.setText("");
        textFieldSubject.setText("");
        dateFieldReqDate.setCalendar(null);
        ComboBoxCreateCaseReqTime.setSelectedIndex(16);
        textAreaDescription.setText("");
        comboBoxCreateCaseSupervisor.setSelectedIndex(0);
        textFieldPrice.setText("");
        dateFieldInspectDate.setCalendar(null);
        dateFieldStartDate.setCalendar(null);
        textAreaToolList.setText("");
        textAreaContacts.setText("");
        comboBoxStatus.setSelectedIndex(0); 
    }
    
    
    public void setErrors(ArrayList<Integer> errors){
        for(Integer i : errors){
            if(i == Cases.NO_CONTRACTOR_FIRSTNAME){
                labelCustomerDFirstName.setForeground(Color.red);
            }
            if(i == Cases.NO_CONTRACTOR_LASTNAME){
                labelCustomerDLastName.setForeground(Color.red);                            
            }
            if(i == Cases.NO_CONTACT_INFO){
               // labelCustomerDFirstName.setForeground(Color.red);            
            }
            if(i == Cases.NO_SUBJECT){
                labelDSubject.setForeground(Color.red);            
            }
            if(i == Cases.WRONG_PHONE_FORMAT){
                labelDPhone.setForeground(Color.red);           
            }
            if(i == Cases.WRONG_POSTALCODE_FORMAT){
                labelDPostalCode.setForeground(Color.red);            
            }
            if(i == Cases.WRONG_PRICE_FORMAT){
                labelDPrice.setForeground(Color.red);            
            }                
        }        
    }//GEN-LAST:event_buttonCompleteActionPerformed

    private void textFieldCustomerLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCustomerLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldCustomerLastNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBoxCreateCaseReqTime;
    private javax.swing.JButton buttonComplete;
    private javax.swing.JComboBox comboBoxCreateCaseSupervisor;
    private javax.swing.JComboBox comboBoxStatus;
    private com.toedter.calendar.JDateChooser dateFieldInspectDate;
    private com.toedter.calendar.JDateChooser dateFieldReqDate;
    private com.toedter.calendar.JDateChooser dateFieldStartDate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel labelCreateCaseDInspectDate;
    private javax.swing.JLabel labelCreateCaseDNameHeader;
    private javax.swing.JLabel labelCreateCaseDReqTime;
    private javax.swing.JLabel labelCreateCaseDSupervisorHeader;
    private javax.swing.JLabel labelCreateCaseHeader;
    private javax.swing.JLabel labelCreateCaseName;
    private javax.swing.JLabel labelCreateCaseReqDate;
    private javax.swing.JLabel labelCustomerDFirstName;
    private javax.swing.JLabel labelCustomerDLastName;
    private javax.swing.JLabel labelDAddress;
    private javax.swing.JLabel labelDContacts;
    private javax.swing.JLabel labelDDate;
    private javax.swing.JLabel labelDDescription;
    private javax.swing.JLabel labelDEquipment;
    private javax.swing.JLabel labelDPhone;
    private javax.swing.JLabel labelDPostalCode;
    private javax.swing.JLabel labelDPrice;
    private javax.swing.JLabel labelDReqDate;
    private javax.swing.JLabel labelDStartDate;
    private javax.swing.JLabel labelDStatus;
    private javax.swing.JLabel labelDSubject;
    private javax.swing.JLabel labelDate;
    private javax.swing.JTextArea textAreaContacts;
    private javax.swing.JTextArea textAreaDescription;
    private javax.swing.JTextArea textAreaToolList;
    private javax.swing.JTextField textFieldAddress;
    private javax.swing.JTextField textFieldCustomerFirstName;
    private javax.swing.JTextField textFieldCustomerLastName;
    private javax.swing.JTextField textFieldPhone;
    private javax.swing.JTextField textFieldPostPlace;
    private javax.swing.JTextField textFieldPostalCode;
    private javax.swing.JTextField textFieldPrice;
    private javax.swing.JTextField textFieldSubject;
    // End of variables declaration//GEN-END:variables
}
